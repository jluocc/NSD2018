使用教学虚拟机

• 每个学员机上有三台预先配置好的虚拟机
 – server —— 作为练习用服务器
 – desktop —— 作为练习用客户机
 – classroom —— 提供网关/DNS/软件素材/DHCP服务等资源

  优先开机classroom，再去开启server、desktop  

一、真机还原命令：优先还原classroom

[root@room9pc01 ~]# rht-vmctl reset classroom
[root@room9pc01 ~]# rht-vmctl reset server[root@room9pc01 ~]# rht-vmctl reset desktop

二、进入 虚拟机server 与  虚拟机desktop,检测Yum是否可用

# yum  clean  all    #清空缓存
# yum  repolist      #列出仓库信息
#################################################
案例4:编写一个判断脚本
在 server0 上创建 /root/foo.sh 脚本
 1)当运行/root/foo.sh redhat,输出为fedora
 2)当运行/root/foo.sh fedora,输出为redhat
 3)当没有任何参数或者参数不是 redhat 或者fedora时,
 其错误输出产生以下信息: /root/foo.sh redhat|fedora

[root@server0 ~]# vim /root/foo.sh
 #!/bin/bash
 if  [ $# -eq  0 ];then
   echo '/root/foo.sh redhat|fedora' >&2  #变成错误输出
   exit  36                   #程序退出返回值
 elif  [ $1 == redhat ];then
   echo fedora
 elif  [  $1 == fedora ];then
   echo redhat
 else
   echo '/root/foo.sh redhat|fedora' >&2  #变成错误输出
   exit  25                   #程序退出返回值
 fi
                   
#################################################
扩展案例：
[root@server0 /]# vim /root/user.txt
 	yuanxiao
	qingming
	duanwu
	wuyi
	liuyi
	wusi
        ......
 请利用for循环：
  该文件/root/user.txt内容，每一行为一个用户的名称
  创建/root/user.txt文件中所有用户

 [root@server0 ~]# vim /root/for.sh
 #!/bin/bash
 for a in `cat /root/user.txt`
 do
  useradd $a &> /dev/null
  echo $a创建成功
 done

################################################
案例5:编写一个批量添加用户脚本
在 server0 上创建 /root/batchusers 脚本
1)此脚本要求提供用户名列表文件作为参数
2)如果没有提供参数,此脚本应该给出提示 
Usage: /root/batchusers,退出并返回相应值
3)如果提供一个不存在的文件,此脚本应该给出提
示 Input file not found,退出并返回相应值
4)新用户的登录Shell为 /bin/false,无需设置密码
5)用户列表测试文件:
[root@server0 ~]# cat /root/userlist
  zhangsan
  lisi
  harry
  natasha
  dc
  tc
  jack

[root@server0 ~]# cat /root/batchusers 
  #!/bin/bash
  if  [ $# -eq 0 ];then
    echo 'Usage: /root/batchusers' >&2
    exit 2
  elif  [  -f  $1 ];then
    for i  in  `cat $1`
    do
     useradd -s /bin/false $i &> /dev/null
     echo $i创建成功
    done
  else
    echo 'Input file not found' >&2
    exit 3
  fi
###############################################
系统安全保护
• Security-Enhanced Linux
– 美国NSA国家安全局主导开发,一套增强Linux系统安
全的强制访问控制体系
– 集成到Linux内核(2.6及以上)中运行
– RHEL7基于SELinux体系针对用户、进程、目录和文件
提供了预设的保护策略,以及管理工具


• SELinux的运行模式
– enforcing(强制)、permissive(宽松)
– disabled(彻底禁用)
  
 任何一种运行模式，变成disabled(彻底禁用)都要经历重起系统

切换运行模式
– 临时切换:setenforce 1|0
– 固定配置:/etc/selinux/config 文件

修改两台虚拟机   Server与 Desktop
[root@server0 ~]# getenforce 
Enforcing   #强制模式                   
[root@server0 ~]# setenforce 0   #修改当前状态为宽松模式
[root@server0 ~]# getenforce 
Permissive     
              
[root@server0 ~]# vim /etc/selinux/config 
SELINUX=permissive

###############################################
虚拟机Server：搭建基本Web服务
1.安装httpd(Apache)软件包（服务端软件）
[root@server0 ~]# yum -y install httpd 

2.重起程序（服务）
[root@server0 ~]# systemctl restart httpd
[root@server0 ~]# systemctl enable httpd  #开机自起
ln -s '/usr/lib/systemd/system/httpd.service' '/etc/systemd/system/multi-user.target.wants/httpd.service'

3.验证本机访问测试
[root@server0 ~]# firefox 172.25.0.11

4.书写一个页面
    网页文件默认存放路径:/var/www/html/
    默认网页文件的名字:index.html

[root@server0 ~]# cat /var/www/html/index.html
<marquee><font color=red><h1>NSD1808 阳光明媚
 滚动效果       字体颜色             最大字体

[root@server0 ~]# firefox 172.25.0.11
###############################################
虚拟机Server：搭建FTP服务:文件数据传输

1.安装软件包vsftpd
2.重起vsftpd服务
[root@server0 ~]# systemctl restart vsftpd
[root@server0 ~]# systemctl restart vsftpd

 默认共享数据路径：/var/ftp

3.本机测试
[root@server0 ~]# firefox  ftp://172.25.0.11

################################################
 防火墙： 隔离作用

  硬件防火墙
  软件防火墙

 firewalld服务

• 系统服务:firewalld
• 管理工具:firewall-cmd、firewall-config
[root@server0 ~]# systemctl restart firewalld
[root@server0 ~]# firewall-config &

##############################################

• 根据所在的网络场所区分,预设保护规则集
  – public:仅允许访问本机的sshd、ping、dhcp服务
  – trusted:允许任何访问
  – block:阻塞任何来访请求，明确拒绝
  – drop:丢弃任何来访的数据包，直接丢弃

##############################################












































