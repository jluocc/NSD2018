# 3. 生成前40 个斐波那契(Fibonacci)数列中的数
#    1  1  2  3  5  8  13  21 
#  要求: 将这些数保存于列表中．打印这些数
# 方法1
# L = []  # 空列表,准备放入算出来的斐波那契数
# a = 0  # a 代表当前一个数的前一个数
# b = 1  # b代表当前的斐波那契数
# while len(L) < 40:
#     # 当列表长度不够40就算出一个数,加入到L中
#     # 每次循环算出一个数,加入到列表L中
#     L.append(b)  # 已经有的数放入列表
#     c = a + b  # 求出下一个斐波那契数
#     a = b
#     b = c
# 方法2
# L = []  # 空列表,准备放入算出来的斐波那契数
# a = 0  # a 代表当前一个数的前一个数
# b = 1  # b代表当前的斐波那契数
# while len(L) < 40:
#     # 当列表长度不够40就算出一个数,加入到L中
#     # 每次循环算出一个数,加入到列表L中
#     L.append(b)  # 已经有的数放入列表
#     a, b = b, a + b  # 序列赋值

# 方法3
L = [1, 1]
while len(L) < 40:
    L.append(L[-1] + L[-2])


print(L)




