空字符串的字面值表示方法：
	''
	""
	'''''
	""""""
		注：空字符串的布尔值为False
非空字符串的字面值表示方法；
	'hellp'
	"hello"
	'''hello'''
	"""hello"""
>>> '''sdf'''
'sdf'
>>> 'dfsdf'
'dfsdf'
学会用变量=变量返回的结果来判断两个变量是否相等
单引号和双引号的区别：
	单引号内的双引号不算结束符
	双引号内的单引号不算结束符

alt+方向键  整体移动
>>> ''
''
>>> ''''''
''
>>> """"""
''
>>>

>>> """"  （单引号也是）
...

三引号字符串（所见即所得）
用'''或"""括起来的内容为三引号字符串
作用；
	三引号字符串中的换行会自动转化为换行符'\n'
	三引号内可以包含单引号和双引号
	三单引可以包含三双引，三双引可以包含三单引
	如：
	>>> print('welcome to bej.\nI like python!\n I am Stuting...')

	welcome to bej.
	I like python!
 	I am Stuting...

 >>> print('''sdhf sefh  sdjf
... dfuwe sdjhf
... dfhks sdjhfh''')

sdhf sefh  sdjf
dfuwe sdjhf
dfhks sdjhfh

>>> s2='''aaaa
... bbbb
... cccc'''

>>> a='''dfs
... sdf
... sdf'''
>>> a
'dfs\nsdf\nsdf'
>>> print(a)
dfs
sdf
sdf

>>> s2
'aaaa\nbbbb\ncccc'

隐式字符串字面值拼接：
	示例：
	s="I'm" '"weisdhf"' '这是三双引号"""' "这是三单引'''"

>>> s="I'm" '"weisdhf"' '这是三双引号"""' "这是三单引'''"
>>> print(s)
I'm"weisdhf"这是三双引号"""这是三单引'''
>>> s
'I\'m"weisdhf"这是三双引号"""这是三单引\'\'\''

用转义序列代表特殊字符
	字符串字面值中用反斜杠\后跟一些字符代表
	特一个字符
	\'   代表一个单引号
	\"   代表一个双引号
	\n   代表一个换行符
	\\   代表一个反斜杠
	\r   返回当标至行首字符（会覆盖之前的）
	\t   水平制表符（凑齐8个字符）
	\v   垂直制表符
	\b   退格字符
	\f   换页
	\0   空字符（字符值为0，第一个字符）
	\0oo   oo为两位八进制表示的字符  （>>> '\101'   'A'）
	\xXX   XX为两位十六进制表示的字符
>>> print('\x41\x42')
AB
	\uXXXX   XXXX为四位十六表示的Unicode 16字符
	\uXXXXXXX   Unicode 8位的十六进制表示的字符

$ man ascii查看所有英文字符的编码
常用的ASCII编码；
	字符   十进制      十六进制
	'0'	48          0x30
	'A'     65          0x41
	'a'     97          0x61
	' '     32          0x20
	求字符串长度的函数：
		len(s)   返回字符串的字符的个数

raw  字符串（原始字符串）（让反斜杠不再是转义字符）
	格式：
		r'字符串内容'
		r"字符串内容"
		r'''字符串内容'''
		r"""字符串内容"""
	作用：
		让转移字符 \ 无效
>>> a="sdf'\n'sdf dsh'\'"
>>> a
"sdf'\n'sdf dsh''

>>> a="sdf'\n'sdf dsh'\'"
>>> a
"sdf'\n'sdf dsh''"
>>> print(a)
sdf'
'sdf dsh''
>>> b="sdf\nsdf dsh"
>>> print(b)
sdf
sdf dsh
字符串的运算
	运算符：
	+ += * *=
		+ 加好用于拼接字符串
		+=用于原字符串与右侧字符串拼接后替换原变量

   *运算符生成重复的字符串（字符串只能和整数想乘）
字符串的比较运算：
	运算符；< <= > >= == !=
	规则：
		依次按编码进行比较，一旦不同，比较将结束
		当编码值与长度完全相同时两个字符串相等

in /not in 运算符（整个序列）
	    作用：用于序列，字典集合中 ，用于判断呢某个值是否
	    存在于容器中，如果存在返回真，否则返回假
	    not in 相反
	    格式：
	    对象 in 序列

索引运算 Index
	python字符串是不可以改变的字符序列
	语法：字符串[整数表达式]
	说明：	
		python 序列都可以用索引来访问序列中的对象
		python序列正向索引是从0开始的，第二个索引为2，.....，最后一个索引为len(s)-1
		python 序列的反向索引是从-1开始的，-1最后一个，-2daibiao daoshu dierge ,。。。，
		第一个是-len(s)

字符串切片操作slice
从字符串序列中取出相应的元素，从新组成一个新的字符串序列
语法：字符串[(开始索引b):(结束索引e)：(步长s)]
x[1:len(x)-1]=x[1:-1]
[::-1]倒序排（id会变）
回文

python3中常用的序列函数
	len(x)	返回序列的长度
	max(x)	返回序列的最大值元素
	min(x)	返回序列的最小值元素
	可用于字符串，不一定字符串

字符编码转换函数
ord(c)   返回一个字符c的Unicode编码值
chr(i)    返回i 这个值所对应的字符
看到字符用ord，看到数字用chr
>>> ord('a')
97
>>> chr(97)
'a'
c=ord('A')
print(c)   65
ch=chr(c)   ch='A'
print(ch)   A
# x=input('请输入一个字符串：')
# if len(x)!=0:
#     print(ord(x[0]))
不为空的几个方法：
1.if x:
2.x!==''


y=int(input('请输入一个整数：'))
print(chr(y))

整数转字符串函数；
	bin(i)	将整数转为二进制字符串
	oct(i)	将整数转为八进制字符串
	hex(i)	将整数转为十六进制字符串

字符串构造函数
	str(obj='')		将对象转换为字符串
	'df'+str(1)

python3中常用的字符串方法(method)
方法的调用语法；
	对象.方法名(方法传参)
a.isalpha()  判断字符串中是否全为英文字母
>>> s='asd'
>>> b='123'
>>> s.isalpha()
True
>>> b.isalpha()
False
（只能有字符的才能判断，有 ''号，输入整数会错）