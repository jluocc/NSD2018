集合  set
集合是可变的容器
集合内的数据对象都是唯一的（不能重复多次）
集合是无序的存储结果，集合中的数据没有先后关系  （速度快）
集合内的元素必须是不可变对象
集合是可迭代对象
集合是相当于只有键没有值的字典（键则是集合的数据）
（无序无重，可迭代，不变可变）

创建空集合
set()
创建非空集合
s={1,2,3}
集合的构造函数set
set()创建一个空的集合对象（不能用{}来创建空集合）
set(iterable)  用可迭代对象创建一个新的集合对象
示例：
s=set()
s={3,4,65,8}
s=set{'ABC'}
s=set{'ABCBDBC'}   #{'A','B','C','D'}
>>> s=set({1:'yi',2:'er',3:'san'})
>>> s
{1, 2, 3}

>>> s=set([None,False,True,0,1,2])
>>> s
{False, True, 2, None}
(0,1和真假重复)
####################################不能放可变的对象，字典也不可以
>>> s={1,2,3}
>>> s
{1, 2, 3}
>>> s={1,2,3,[12,34]}
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unhashable type: 'list'
>>> s={1,2,3,{'er',45}}
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unhashable type: 'set'
>>> s
{1, 2, 3}
>>> s={1,2,3,{'er':45}}
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unhashable type: 'dict'
########################################
集合的运算：
交集&，并集|,补集-，对称补集^（相当于全集去掉交集的部分）
子集<    超集>
&生成两个集合的交集

==  !=  判断集合是否相同
>=  <=

in/not in运算符等同于列表的（所有容器都支持的）

用于集合的函数 len/max/min/sum/any/all
集合常用的方法看文档
集合的修改是删了在加，没有直接改的

集合是可迭代对象
（for,推导式）
集合推导式
	集合推导式是用可迭代对象创建集合的表达式
	语法：
	{表达式 for 变量 in 可迭代对象 [if 真值表达式]}

推导式总结：
	小结：
	列表推导式[x for x in L if ...]
	字典推导式[x:x**2 for x in L if ...]
	集合推导式{x for x in L if ...}

固定集合  frozenset
固定集合是不可变的，无序的，含有唯一元素的集合
作用：
固定集合可以作为字典的键，也可以作为集合的值
固定集合的构造函数
frozenset()     创建一个空的固定集合对象
frozenset(iterable)    用可迭代对象创建一个固定集合对象（只有一个参数）
s={frozenset({1,2,3}),100,200}    集合里可以放固定的集合

固定集合的运算：
&   交集
|   并集
-   补集
^   对称补集
<  <=  >   >=   ==  !=
in/  not in 运算
（以上运算符用法与set相同）

固定集合的方法：
相当于集合的全部方法去掉修改集合的方法