一、
1.搭建新的教学环境
--新建两台虚拟机
#clone-vm7
root
密码：123456

2.搭建yum
1）服务端
众多的软件包、仓库数据文件(repodata)、搭建ftp服务共享内容
--安装ftp
#systemctl yum vsftpd
#systemctl restart vsftpd
#systemctl restart vsftpd
--挂载光盘到ftp目录
#ls /var/ftp
#vim /etc/fstab
/var/lib/libvirt/images/iso/rhel-server-7.4-x86_64-dvd.iso  /var/ftp/rhel7 iso9660 defaults 0 0

2）客户端
--配置文件
#vim /etc/yum.repos.d/rhel7.repo
[rhel7]
name=rhel7.4
baseurl=ftp://192.168.4.254/rhel7
enabled=1
gpgcheck=0

3）自定义yum仓库
具备互联网下载的包
--scp命令，依赖于ssh，把本地文件拷贝到远程主机上
格式：scp 本机文件绝对路径    远程主机用户名@远程主机ip地址：远程主机存放的路径
例子
[root@room9pc01 jluo]# scp /jluo/tools.tar.gz root@192.168.4.7:/root
root@192.168.4.7's password: 
tools.tar.gz                                  100%  766KB  22.2MB/s   00:00  

--解压tar包
[root@svr7 ~]# tar -xf /root/tools.tar.gz -C /

--运行createrepo生成仓库清单文件
格式：createrepo 软件包路径
例子
[root@svr7 /]# createrepo /tools/other/
[root@svr7 /]# ls /tools/other/
boxes-1.1.1-4.el7.x86_64.rpm        oneko-1.2-19.fc24.x86_64.rpm
cmatrix-1.2a-1.i386.rpm             repodata
ntfs-3g-2014.2.15-6.el6.x86_64.rpm  sl-5.02-1.el7.x86_64.rpm

--修改配置文件
位置：/etc/yum.repos.d/*.repo
[root@svr7 /]# vim /etc/yum.repos.d/rhel7.repo
[myrpm]
name=rhel7.4
baseurl=file:///tools/other        #软件源地址为本机写法
enabled=1
gpgcheck=0

--测试yum是否能用

#oneko &             # &是把这个程序放入后台运行


3.别名

4.目录结构
#man hier
--主要用途
/boot               存放系统引导必需的文件，包括内核、启动配置
/bin、sbin          存放各种命令程序，/sbin中的程序只能管理员使用，/bin普通用户也能使用
/dev                存放硬盘、键盘、鼠标、光驱等各种设备文件
/root、/home/用户名   是管理员root、普通用户的默认家目录
/var                存放日志文件、邮箱目录等经常变化的文件 
/peoc               存放内存中的映射数据，不占用磁盘空间
/tmp                存放系统运行过程中的一些临时文件
--权限的数值表示
	• 权限的数值化
	– 基本权限:r = 4,w = 2,x = 1
	– 附加权限:SUID = 4,SGID = 2,Sticky Bit = 1
	• 采用数值形式设置权限
	– chmod [-R] nnn 文档...
	– chmod [-R] xnnn 文档...

5.命令
--history
用途：操作历史命令
#history         #查看历史命令
#history -c      #清空命令
#!str            #查看最近以str开头的命令（常用）
#!n              #n为整数，查看最近第n行命令（不常用
例子
# !cat   #执行历史命令最近一条以cat开头的命令
调整命令
/etc/profile
  HISTSIZE=1000     #默认记录1000条

--du
用途：统计文件的占用空间
格式：du [选项]..  [目录或者文件]...
-s：只统计每个参数所占用的总空间大小
-h：提供易读容量单位（K，M等）

--date
查看/调整系统日期时间
查看格式：date [选项]
  +%F:显示年月日
  +%D:
 – date +%F、date +%R
 – date +"%Y-%m-%d %H:%M:%S"
 – date -s "yyyy-mm-dd HH:MM:SS"  #修改时间

--man


--vim编辑技巧
1）命令模式
光标跳转
  home或^ 、数字0      跳转到行首
  end或者$              跳转到行尾
  1G或gg             跳转到文件的首行
  G                  跳转到文件的末尾行
复制/粘贴/删除
  yy、#yy            复制光标处的一行、#行
  p、P               粘贴到光标处之后、之前
  x或delete          删除光标处的单个字符
  dd、#dd            删除光标处的一行、#行
  d^                 从光标之前删除至行首
  d$                 从光标处删除至行尾
  C（大写）               从光标处删除至行尾，进入插入模式
查找/撤销/保存
  /word              向后查找字符串'world'
  n,N                跳至后/前一个结果
  u                  撤销最近的一次操作
  U                  撤销对当前行的所有修改
  Ctrl+r             取消前一次撤销操作
  ZZ                 保存修改并退出
2）末行模式
操作
  :q!                放弃更改，强制退出
  :wq 或者：x         保存并退出
  :r /etc/passwd     读入其他文件内容
字符串替换
  :s/old/new         替换当前第一个'old'
  :s/old/new/g       替换当前所有的'old'
  :n,m s/old/new/g   替换第n-m行所有的'old'
  ：% s/old/new/g     替换文件内所有的'old'
开关参数的控制
 ：set nu |nonu      显示/不显示行号
 ：set ai |noai      启用/关闭自动缩进
3）常见问题
缓存文件（交换文件）
解决办法：删除交换文件（以.开头的同名文件加上swap）

6.源码编译安装
1）rpm包安装：

2）源码包安装
优点：可以选择安装的功能及路径，更加的灵活
--运行gcc与make变成可执行的程序

--步骤
安装gcc与make
  # yum -y install gcc
  make默认安装

tar解包
  # tar -xf /tools/inotify-tools-3.13.tar.gz  -C  /

进入该目录，运行./configure配置
  作用：指定安装目录/功能，检测本机是否安装gcc
  例子
  # ./configure --prefix=/opt/myrpm
  参数：
  --prefix            #指定安装目录

make编译,生成可执行的二进制程序文件
  #make
make install安装，将编译好的文件复制到安装目录
  #make install

卸载
  直接删除安装目录

7.zip归档工具
跨平台压缩
--压缩
格式：zip [-r] 备份文件zip 被归档的文档.....
  -r：被归档由目录须加上该选项
例子
# zip /opt/test.zip /root /boot
# ls /opt/
test.zip
--减压缩
格式：unzip  压缩文件   -d 减压存放目录
-d ：指定存放减压文件目录
例子
#unzip /opt/test.zip -d /mnt
# ls /mnt
boot  root

8.软连接与硬连接
都是快捷方式
--软连接
格式：ln -s /路径/源文档  /路径/快捷方式名称    #路径为绝对路径
软连接（常用）：快捷方式可以跨分区，源文件可以是目录
独占一个i节点

--硬连接
格式：ln /路径/源文档  /路径/快捷方式名称    #路径为绝对路径
硬连接：快捷方式不可以跨分区，源文件不可以是目录
硬连接与源文件i节点编号相同

i节点编号：标识硬盘上一块存储空间的编号
i节点
i节点表     数据存储区域
















